name: Publish

on:
  push:
    branches:
      - main

env:
  JAVA_HOME: '' # INFO: Force JAVA_HOME to be empty, so gradle will use the sdkman java version
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REPOSITORY: ${{ vars.DOCKER_REPOSITORY }}

permissions:
  contents: read
  actions: write
  id-token: write
  packages: read

jobs:
  prepare_tag:
    name: Setup Tag
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.bump_version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Bump version and push tag
        id: bump_version
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
          DEFAULT_BUMP: patch
          DRY_RUN: true

  package:
    name: Package and Publish
    runs-on: ubuntu-latest
    needs: [prepare_tag]
    permissions:
      contents: read
      packages: read
      id-token: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Cache sdkman
        uses: actions/cache@v4
        with:
          path: ~/.sdkman
          key: sdkman-${{ runner.os }}-${{ hashFiles('.sdkmanrc') }}

      - name: Install sdkman
        uses: sdkman/sdkman-action@b1f9b696c79148b66d3d3a06f7ea801820318d0f

      # INFO: Tell Gradle which JDK to use *regardless* of what happens to JAVA_HOME
      - name: Point Gradle at the SDKMAN JDK
        run: echo "JAVA_HOME=$HOME/.sdkman/candidates/java/current" >> $GITHUB_ENV

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Makefile
        run: make build
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build Docker Image
        id: docker
        uses: gradle/gradle-build-action@v3
        env:
          DOCKER_IMAGE: '${{ env.DOCKER_REPOSITORY }}:${{ needs.prepare_tag.outputs.VERSION }}'
        with:
          arguments: bootBuildImage --imageName=${{ env.DOCKER_IMAGE }}

      - name: Container vulnerability scan
        uses: anchore/scan-action@v3
        id: scan_container
        env:
          DOCKER_IMAGE: '${{ env.DOCKER_REPOSITORY }}:${{ needs.prepare_tag.outputs.VERSION }}'
        with:
          image: '${{ env.DOCKER_IMAGE }}'
          fail-build: true
          severity-cutoff: 'high'
          output-format: table
          only-fixed: false

      - name: Publish Docker Image
        env:
          DOCKER_IMAGE: '${{ env.DOCKER_REPOSITORY }}:${{ needs.prepare_tag.outputs.VERSION }}'
        run: ./gradlew bootBuildImage --publishImage --imageName=${{ env.DOCKER_IMAGE }}

  prepare_changelog:
    name: Prepare Changelog
    runs-on: ubuntu-latest
    outputs:
      CHANGELOG: ${{ steps.build_changelog.outputs.CHANGELOG }}
    steps:
      - name: Create Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v5

  release:
    name: Release ${{ needs.prepare_tag.outputs.VERSION }}
    runs-on: ubuntu-latest
    needs: [prepare_tag, prepare_changelog, package]
    permissions:
      contents: write
    steps:
      - name: Create Tag
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ needs.prepare_tag.outputs.VERSION }}",
              sha: context.sha
            })

      - name: Create Release
        uses: actions/github-script@v6
        env:
          RELEASE_BODY: ${{ needs.prepare_changelog.outputs.CHANGELOG }}
        with:
          github-token: ${{ github.token }}
          script: |
            const changelog = process.env.RELEASE_BODY;
            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ needs.prepare_tag.outputs.VERSION }}",
              name: "${{ needs.prepare_tag.outputs.VERSION }}",
              body: changelog,
              generate_release_notes: true
            })
